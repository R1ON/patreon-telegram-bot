model User {
  id                    Int             @id @default(autoincrement())
  email                 String?         @unique
  telegramId            Int             @unique
  balance               BigInt          @default(0)
  subscriptionProductId Int?
  patreonAccessToken    String?
  patreonRefreshToken   String?
  currentSubscribtion   Product?        @relation(fields: [subscriptionProductId], references: [id])
  nextBillingDate       DateTime?
  wallets               Wallet[]
  refills               RefillRequest[]
}

model Wallet {
  id         Int    @id @default(autoincrement())
  userId     Int
  currency   String
  adress     String
  privateKey String
  user       User   @relation(fields: [userId], references: [id])

  @@unique([userId, currency])
}

model RefillRequest {
  id         Int      @id @default(autoincrement())
  userId     Int
  amount     Int?
  price      BigInt?
  currency   String
  status     String
  createdAt  DateTime @default(now())
  updateddAt DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
}

model ProductGroup {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  products    Product[]
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  groupId     Int
  price       Int
  description String
  group       ProductGroup @relation(fields: [groupId], references: [id])
  User        User[]
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}
